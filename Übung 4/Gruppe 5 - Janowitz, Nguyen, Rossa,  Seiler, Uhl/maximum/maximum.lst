GAS LISTING maximum.s 			page 1


   1              		.section .data
   2              	
   3              	data_items: 
   4 0000 03000000 		.long 3,17,34,2,45,35,24,34,44,33,22,11,50,0
   4      11000000 
   4      22000000 
   4      02000000 
   4      2D000000 
   5              	data_items2:
   6 0038 03000000 		.long 3,67,34,2,45,55,54,34,44,33,22,11,75,0
   6      43000000 
   6      22000000 
   6      02000000 
   6      2D000000 
   7              	data_items3:
   8 0070 03000000 		.long 3,67,34,2,45,75,54,34,44,33,22,11,125,0
   8      43000000 
   8      22000000 
   8      02000000 
   8      2D000000 
   9              	final:
  10 00a8 00000000 		.long 0
  11              	
  12              		.section .text
  13              	
  14              		.globl _start
  15              	_start:
  16 0000 8D0D0000 		leal data_items, %ecx
  16      0000
  17 0006 51       		pushl %ecx
  18 0007 E83A0000 		call maximum
  18      00
  19 000c 83C404   		addl $4, %esp		  # reset StackPointer
  20 000f 0105A800 		add %eax, final
  20      0000
  21              	
  22 0015 8D0D3800 		leal data_items2, %ecx
  22      0000
  23 001b 51       		pushl %ecx
  24 001c E8250000 		call maximum
  24      00
  25 0021 0105A800 		add %eax, final
  25      0000
  26              	
  27 0027 8D0D7000 		leal data_items3, %ecx
  27      0000
  28 002d 51       		pushl %ecx
  29 002e E8130000 		call maximum
  29      00
  30 0033 0105A800 		add %eax, final
  30      0000
  31              	
  32 0039 8B1DA800 		movl final, %ebx		  # prepare exit 
  32      0000
  33 003f B8010000 		movl $1, %eax
  33      00
  34 0044 CD80     		int $0x80
GAS LISTING maximum.s 			page 2


  35              	
  36              	maximum:
  37 0046 55       		pushl %ebp			  # Prolog
  38 0047 89E5     		movl %esp, %ebp			  #
  39              		
  40 0049 83EC04   		subl $4, %esp			  # Make room for local variable
  41 004c 8B4D08   		movl 8(%ebp), %ecx 		  # Copy data_items adress to local variable
  42 004f 8B01     		movl (%ecx), %eax		  # Erstes Byte laden
  43 0051 83C104   		addl $4, %ecx		 	  # Zeige auf nächsten wert von data_items
  44              	
  45 0054 89C3     		movl %eax, %ebx 		  # Erster wert ist vorerst der größte
  46              		
  47              	start_loop:	                  	  # start loop
  48 0056 83F800   		cmpl $0, %eax             	  # check to see if we've hit the end
  49 0059 740D     		je loop_exit
  50              	
  51 005b 8B01     		movl (%ecx),%eax 		  # Siehe Oben
  52 005d 83C104   		addl $4, %ecx			  # 
  53              	
  54 0060 39D8     		cmpl %ebx, %eax           	  # compare values
  55 0062 7EF2     		jle start_loop            	  # jump to loop beginning if the new 
  56              		                          	  # one isn't bigger
  57 0064 89C3     		movl %eax, %ebx           	  # move the value as the largest 
  58 0066 EBEE     		jmp start_loop            	  # jump to loop beginning
  59              	
  60              	loop_exit:
  61 0068 89D8     		movl %ebx, %eax			  # Move Biggest Value to %eax for returning
  62              	
  63 006a 89EC     		movl %ebp, %esp			  # Epilog
  64 006c 5D       		popl %ebp			  #
  65 006d C3       		ret				  #
